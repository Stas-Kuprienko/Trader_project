syntax = "proto3";

package com.project.smart;

import "google/protobuf/empty.proto";


service AutoTrade {

  rpc subscribe(stream SubscribeRequest) returns (stream SubscribeResponse);
  rpc unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse);
  rpc getStrategies(google.protobuf.Empty) returns (StrategiesList);

}

message SubscribeRequest {

  Security security = 1;
  Strategy strategy = 2;
  Account account = 3;

}

message UnsubscribeRequest {

  Security security = 1;
  Strategy strategy = 2;
  Account account = 3;

}

message SubscribeResponse {

  oneof payload {
    OrderNotification notification = 1;
    StatusResponse status = 2;
    Exception exception = 3;
  }

}

message UnsubscribeResponse {

  StatusResponse status = 1;

}

message Account {

  string broker = 1;
  string clientId = 2;
  string token = 3;
  string accountId = 4;

}

message Security {

  string ticker = 1;
  string board = 2;
  string exchange = 3;

}

enum TradeScope {

  INTRADAY = 0;
  MEDIUMTERM = 1;

}

message Strategy {

  string name = 1;
  TradeScope tradeScope = 2;

}

enum Direction {

  BUY = 0;
  SELL = 1;

}

message StrategiesList {

  repeated string item = 1;

}

message StatusResponse {

  bool success = 1;
  Account account = 2;
  Security security = 3;
  Strategy strategy = 4;

}

message Order {

  Account account = 1;
  Strategy strategy = 2;
  Security security = 3;
  double price = 4;
  int64 quantity = 5;
  Direction direction = 6;
  int32 transactionId = 7;
  string time = 8;

}

message OrderNotification {

  repeated Order orderList = 1;

}

message Exception {

  int32 code = 1;
  string message = 2;

}