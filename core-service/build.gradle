plugins {
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
    id "com.google.protobuf" version "0.9.4"
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'

	//cloud
    implementation "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:$cloud_version"

	//project
	implementation project(':common')

	//swagger
    implementation "org.springdoc:springdoc-openapi-starter-webflux-ui:$swagger_version"

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation "org.springframework.security:spring-security-oauth2-jose:$security_oauth2_version"

    //keycloak
    implementation "org.keycloak:keycloak-admin-client:$keycloak_version"

    //kafka
	implementation "org.springframework.kafka:spring-kafka:$spring_kafka_version"

    //grpc framework
	implementation "io.grpc:grpc-netty-shaded:$rpc_version"
	implementation "io.grpc:grpc-protobuf:$rpc_version"
	implementation "io.grpc:grpc-stub:$rpc_version"
	implementation "net.devh:grpc-spring-boot-starter:$grpc_starter_version"

	//annotations
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    //migration
	implementation "org.flywaydb:flyway-core:$flyway_version"
	implementation "org.flywaydb:flyway-database-postgresql:$flyway_version"

    //database
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	runtimeOnly "org.postgresql:postgresql:$postgresql_version"
	runtimeOnly "org.postgresql:r2dbc-postgresql:$r2dbc_postgresql_version"

    //xml
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:$jackson_version"

	//xls
    implementation 'org.apache.poi:poi-ooxml:5.3.0'

    //tests
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0-pre2'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
  main {
    proto {
      srcDir 'src/main/protobuf'
      srcDir 'src/main/protocolbuffers'
      include '**/*.protodevel'
    }
    java {
      srcDirs 'build/generated/source/proto/main/java'
      srcDirs 'build/generated/source/proto/main/grpc'
    }
  }
  test {
    proto {
      srcDir 'src/test/protocolbuffers'
    }
  }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.named('test') {
	useJUnitPlatform()
}
